{"version":3,"sources":["icons.js","utils/helpers.js","components/Forecast/ForecastRow.js","components/Forecast/ForecastCard.js","components/Forecast/ForecastRowHourly.js","components/Forecast/ForecastCardHourly.js","components/Forecast/ForecastContainer.js","App.js","serviceWorker.js","index.js"],"names":["weatherIcons","label","icon","buildIcon","day","dayOrNight","prefix","hour","Date","getHours","code","weather","id","iconDesc","filter","x","buildIconFromID","onlyUnique","value","index","self","indexOf","kelvinToFahrenheit","k","ForecastRow","children","className","ForecastCard","handleOnClick","active","onClick","format","dt_txt","utils","main","avgCondition","Math","round","high","low","ForecastRowHourly","temp_max","temp_min","ForecastContainer","props","geolocationError","err","setState","forecast","location","displayHourly","located","console","warn","message","handleDailyTempChart","temp","count","state","hourlyForecastList","map","time","y","count2","count3","count4","handleKeyPress","e","key","handleForecastSearch","handleGeoSearch","pos","coords","url","latitude","longitude","fetch","then","res","json","log","data","list","test","highsAndLows","getHighsAndLows","newData","d","i","avgData","split","shift","date","testDate","RegExp","arr","determineForecastAverage","newDataFinal","hourlyFiveDay","city","catch","mostFrequent","array","result","tmp","length","j","filterDates","highest","reduce","max","num","lowest","min","wholeList","handleHourlyForecast","dt","newHourly","newForecast","hourlyForecast","zip","zipCode","newState","navigator","geolocation","getCurrentPosition","position","this","enableHighAccuracy","timeout","maximumAge","htmlFor","ref","type","placeholder","onKeyPress","name","random","transitionName","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","style","maxWidth","margin","theme","VictoryTheme","material","domainPadding","height","opacity","text","fontFamily","fontSize","crossAxis","standalone","axis","stroke","axisLabel","padding","tickLabels","dependentAxis","animate","duration","onLoad","offset","colorScale","alignment","barRatio","Component","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.e0c0f045.chunk.js","sourcesContent":["export const weatherIcons = [\r\n  {\r\n    \"200\": {\r\n      label: \"thunderstorm with light rain\",\r\n      icon: \"storm-showers\"\r\n    }\r\n  },\r\n  {\r\n    \"201\": {\r\n      label: \"thunderstorm with rain\",\r\n      icon: \"storm-showers\"\r\n    }\r\n  },\r\n  {\r\n    \"202\": {\r\n      label: \"thunderstorm with heavy rain\",\r\n      icon: \"storm-showers\"\r\n    }\r\n  },\r\n  {\r\n    \"210\": {\r\n      label: \"light thunderstorm\",\r\n      icon: \"storm-showers\"\r\n    }\r\n  },\r\n  {\r\n    \"211\": {\r\n      label: \"thunderstorm\",\r\n      icon: \"thunderstorm\"\r\n    }\r\n  },\r\n  {\r\n    \"212\": {\r\n      label: \"heavy thunderstorm\",\r\n      icon: \"thunderstorm\"\r\n    }\r\n  },\r\n  {\r\n    \"221\": {\r\n      label: \"ragged thunderstorm\",\r\n      icon: \"thunderstorm\"\r\n    }\r\n  },\r\n  {\r\n    \"230\": {\r\n      label: \"thunderstorm with light drizzle\",\r\n      icon: \"storm-showers\"\r\n    }\r\n  },\r\n  {\r\n    \"231\": {\r\n      label: \"thunderstorm with drizzle\",\r\n      icon: \"storm-showers\"\r\n    }\r\n  },\r\n  {\r\n    \"232\": {\r\n      label: \"thunderstorm with heavy drizzle\",\r\n      icon: \"storm-showers\"\r\n    }\r\n  },\r\n  {\r\n    \"300\": {\r\n      label: \"light intensity drizzle\",\r\n      icon: \"sprinkle\"\r\n    }\r\n  },\r\n  {\r\n    \"301\": {\r\n      label: \"drizzle\",\r\n      icon: \"sprinkle\"\r\n    }\r\n  },\r\n  {\r\n    \"302\": {\r\n      label: \"heavy intensity drizzle\",\r\n      icon: \"sprinkle\"\r\n    }\r\n  },\r\n  {\r\n    \"310\": {\r\n      label: \"light intensity drizzle rain\",\r\n      icon: \"sprinkle\"\r\n    }\r\n  },\r\n  {\r\n    \"311\": {\r\n      label: \"drizzle rain\",\r\n      icon: \"sprinkle\"\r\n    }\r\n  },\r\n  {\r\n    \"312\": {\r\n      label: \"heavy intensity drizzle rain\",\r\n      icon: \"sprinkle\"\r\n    }\r\n  },\r\n  {\r\n    \"313\": {\r\n      label: \"shower rain and drizzle\",\r\n      icon: \"sprinkle\"\r\n    }\r\n  },\r\n  {\r\n    \"314\": {\r\n      label: \"heavy shower rain and drizzle\",\r\n      icon: \"sprinkle\"\r\n    }\r\n  },\r\n  {\r\n    \"321\": {\r\n      label: \"shower drizzle\",\r\n      icon: \"sprinkle\"\r\n    }\r\n  },\r\n  {\r\n    \"500\": {\r\n      label: \"light rain\",\r\n      icon: \"rain\"\r\n    }\r\n  },\r\n  {\r\n    \"501\": {\r\n      label: \"moderate rain\",\r\n      icon: \"rain\"\r\n    }\r\n  },\r\n  {\r\n    \"502\": {\r\n      label: \"heavy intensity rain\",\r\n      icon: \"rain\"\r\n    }\r\n  },\r\n  {\r\n    \"503\": {\r\n      label: \"very heavy rain\",\r\n      icon: \"rain\"\r\n    }\r\n  },\r\n  {\r\n    \"504\": {\r\n      label: \"extreme rain\",\r\n      icon: \"rain\"\r\n    }\r\n  },\r\n  {\r\n    \"511\": {\r\n      label: \"freezing rain\",\r\n      icon: \"rain-mix\"\r\n    }\r\n  },\r\n  {\r\n    \"520\": {\r\n      label: \"light intensity shower rain\",\r\n      icon: \"showers\"\r\n    }\r\n  },\r\n  {\r\n    \"521\": {\r\n      label: \"shower rain\",\r\n      icon: \"showers\"\r\n    }\r\n  },\r\n  {\r\n    \"522\": {\r\n      label: \"heavy intensity shower rain\",\r\n      icon: \"showers\"\r\n    }\r\n  },\r\n  {\r\n    \"531\": {\r\n      label: \"ragged shower rain\",\r\n      icon: \"showers\"\r\n    }\r\n  },\r\n  {\r\n    \"600\": {\r\n      label: \"light snow\",\r\n      icon: \"snow\"\r\n    }\r\n  },\r\n  {\r\n    \"601\": {\r\n      label: \"snow\",\r\n      icon: \"snow\"\r\n    }\r\n  },\r\n  {\r\n    \"602\": {\r\n      label: \"heavy snow\",\r\n      icon: \"snow\"\r\n    }\r\n  },\r\n  {\r\n    \"611\": {\r\n      label: \"sleet\",\r\n      icon: \"sleet\"\r\n    }\r\n  },\r\n  {\r\n    \"612\": {\r\n      label: \"shower sleet\",\r\n      icon: \"sleet\"\r\n    }\r\n  },\r\n  {\r\n    \"615\": {\r\n      label: \"light rain and snow\",\r\n      icon: \"rain-mix\"\r\n    }\r\n  },\r\n  {\r\n    \"616\": {\r\n      label: \"rain and snow\",\r\n      icon: \"rain-mix\"\r\n    }\r\n  },\r\n  {\r\n    \"620\": {\r\n      label: \"light shower snow\",\r\n      icon: \"rain-mix\"\r\n    }\r\n  },\r\n  {\r\n    \"621\": {\r\n      label: \"shower snow\",\r\n      icon: \"rain-mix\"\r\n    }\r\n  },\r\n  {\r\n    \"622\": {\r\n      label: \"heavy shower snow\",\r\n      icon: \"rain-mix\"\r\n    }\r\n  },\r\n  {\r\n    \"701\": {\r\n      label: \"mist\",\r\n      icon: \"sprinkle\"\r\n    }\r\n  },\r\n  {\r\n    \"711\": {\r\n      label: \"smoke\",\r\n      icon: \"smoke\"\r\n    }\r\n  },\r\n  {\r\n    \"721\": {\r\n      label: \"haze\",\r\n      icon: \"day-haze\"\r\n    }\r\n  },\r\n  {\r\n    \"731\": {\r\n      label: \"sand, dust whirls\",\r\n      icon: \"cloudy-gusts\"\r\n    }\r\n  },\r\n  {\r\n    \"741\": {\r\n      label: \"fog\",\r\n      icon: \"fog\"\r\n    }\r\n  },\r\n  {\r\n    \"751\": {\r\n      label: \"sand\",\r\n      icon: \"cloudy-gusts\"\r\n    }\r\n  },\r\n  {\r\n    \"761\": {\r\n      label: \"dust\",\r\n      icon: \"dust\"\r\n    }\r\n  },\r\n  {\r\n    \"762\": {\r\n      label: \"volcanic ash\",\r\n      icon: \"smog\"\r\n    }\r\n  },\r\n  {\r\n    \"771\": {\r\n      label: \"squalls\",\r\n      icon: \"day-windy\"\r\n    }\r\n  },\r\n  {\r\n    \"781\": {\r\n      label: \"tornado\",\r\n      icon: \"tornado\"\r\n    }\r\n  },\r\n  {\r\n    \"800\": {\r\n      label: \"clear sky\",\r\n      icon: \"sunny\"\r\n    }\r\n  },\r\n  {\r\n    \"801\": {\r\n      label: \"few clouds\",\r\n      icon: \"cloudy\"\r\n    }\r\n  },\r\n  {\r\n    \"802\": {\r\n      label: \"scattered clouds\",\r\n      icon: \"cloudy\"\r\n    }\r\n  },\r\n  {\r\n    \"803\": {\r\n      label: \"broken clouds\",\r\n      icon: \"cloudy\"\r\n    }\r\n  },\r\n  {\r\n    \"804\": {\r\n      label: \"overcast clouds\",\r\n      icon: \"cloudy\"\r\n    }\r\n  },\r\n  {\r\n    \"900\": {\r\n      label: \"tornado\",\r\n      icon: \"tornado\"\r\n    }\r\n  },\r\n  {\r\n    \"901\": {\r\n      label: \"tropical storm\",\r\n      icon: \"hurricane\"\r\n    }\r\n  },\r\n  {\r\n    \"902\": {\r\n      label: \"hurricane\",\r\n      icon: \"hurricane\"\r\n    }\r\n  },\r\n  {\r\n    \"903\": {\r\n      label: \"cold\",\r\n      icon: \"snowflake-cold\"\r\n    }\r\n  },\r\n  {\r\n    \"904\": {\r\n      label: \"hot\",\r\n      icon: \"hot\"\r\n    }\r\n  },\r\n  {\r\n    \"905\": {\r\n      label: \"windy\",\r\n      icon: \"windy\"\r\n    }\r\n  },\r\n  {\r\n    \"906\": {\r\n      label: \"hail\",\r\n      icon: \"hail\"\r\n    }\r\n  },\r\n  {\r\n    \"951\": {\r\n      label: \"calm\",\r\n      icon: \"sunny\"\r\n    }\r\n  },\r\n  {\r\n    \"952\": {\r\n      label: \"light breeze\",\r\n      icon: \"cloudy-gusts\"\r\n    }\r\n  },\r\n  {\r\n    \"953\": {\r\n      label: \"gentle breeze\",\r\n      icon: \"cloudy-gusts\"\r\n    }\r\n  },\r\n  {\r\n    \"954\": {\r\n      label: \"moderate breeze\",\r\n      icon: \"cloudy-gusts\"\r\n    }\r\n  },\r\n  {\r\n    \"955\": {\r\n      label: \"fresh breeze\",\r\n      icon: \"cloudy-gusts\"\r\n    }\r\n  },\r\n  {\r\n    \"956\": {\r\n      label: \"strong breeze\",\r\n      icon: \"cloudy-gusts\"\r\n    }\r\n  },\r\n  {\r\n    \"957\": {\r\n      label: \"high wind, near gale\",\r\n      icon: \"cloudy-gusts\"\r\n    }\r\n  },\r\n  {\r\n    \"958\": {\r\n      label: \"gale\",\r\n      icon: \"cloudy-gusts\"\r\n    }\r\n  },\r\n  {\r\n    \"959\": {\r\n      label: \"severe gale\",\r\n      icon: \"cloudy-gusts\"\r\n    }\r\n  },\r\n  {\r\n    \"960\": {\r\n      label: \"storm\",\r\n      icon: \"thunderstorm\"\r\n    }\r\n  },\r\n  {\r\n    \"961\": {\r\n      label: \"violent storm\",\r\n      icon: \"thunderstorm\"\r\n    }\r\n  },\r\n  {\r\n    \"962\": {\r\n      label: \"hurricane\",\r\n      icon: \"cloudy-gusts\"\r\n    }\r\n  }\r\n];\r\n","import { weatherIcons } from \"../icons\";\r\n\r\nexport const buildIcon = day => {\r\n  let dayOrNight;\r\n  let prefix = \"wi wi-\";\r\n\r\n  const today = new Date();\r\n  const hour = today.getHours();\r\n\r\n  if (hour > 6 && hour < 20) {\r\n    dayOrNight = \"day-\";\r\n  } else {\r\n    dayOrNight = \"night-\";\r\n  }\r\n\r\n  const code = day.weather[0].id;\r\n  let iconDesc = weatherIcons.filter(x => {\r\n    if (x[code]) {\r\n      return x;\r\n    }\r\n    return null;\r\n  });\r\n  iconDesc = iconDesc[0][code].icon;\r\n  prefix = `${prefix}${iconDesc}`;\r\n\r\n  return `${prefix} wi-owm-${dayOrNight}${code}`;\r\n};\r\n\r\nexport const buildIconFromID = id => {\r\n  let dayOrNight;\r\n  let prefix = \"wi wi-\";\r\n\r\n  const today = new Date();\r\n  const hour = today.getHours();\r\n\r\n  if (hour > 6 && hour < 20) {\r\n    dayOrNight = \"day-\";\r\n  } else {\r\n    dayOrNight = \"night-\";\r\n  }\r\n\r\n  const code = id;\r\n  let iconDesc = weatherIcons.filter(x => {\r\n    if (x[code]) {\r\n      return x;\r\n    }\r\n    return null;\r\n  });\r\n  iconDesc = iconDesc[0][code].icon;\r\n  prefix = `${prefix}${iconDesc}`;\r\n\r\n  return `${prefix} wi-owm-${dayOrNight}${code}`;\r\n};\r\n\r\nexport const onlyUnique = (value, index, self) => {\r\n  return self.indexOf(value) === index;\r\n};\r\n\r\nexport const titleCase = str => {\r\n  return str\r\n    .toLowerCase()\r\n    .split(\" \")\r\n    .map(function(word) {\r\n      return word.replace(word[0], word[0].toUpperCase());\r\n    })\r\n    .join(\" \");\r\n};\r\n\r\nexport const kelvinToFahrenheit = k => {\r\n  const temp = (k - 273.15) * 1.8 + 32;\r\n  return temp;\r\n};\r\n","import React from \"react\";\r\nimport \"./ForecastRow.css\";\r\n\r\nconst ForecastRow = ({ children }) => {\r\n  return <div className=\"forecast-wrapper\">{children}</div>;\r\n};\r\n\r\nexport default ForecastRow;\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport * as utils from '../../utils/helpers';\r\nimport './ForecastCard.css';\r\n\r\nconst ForecastCard = ({ day, handleOnClick, active }) => {\r\n  return (\r\n    <button\r\n      onClick={() => handleOnClick(day)}\r\n      className={`forecast-card ${active ? 'forecast-card__active' : ''}`}\r\n    >\r\n      <p className=\"day\">\r\n        <Moment format={'ddd'}>{day.dt_txt}</Moment>\r\n      </p>\r\n      <div className=\"weather-icon\">\r\n        <i className={utils.buildIconFromID(day.main.avgCondition)} />\r\n      </div>\r\n      <div className=\"temps\">\r\n        <div className=\"temp-high\">\r\n          {Math.round(utils.kelvinToFahrenheit(day.main.high))}\r\n          <i className=\"degree-symbol\" />\r\n        </div>\r\n        <div className=\"temp-low\">\r\n          {Math.round(utils.kelvinToFahrenheit(day.main.low))}\r\n          <i className=\"degree-symbol\" />\r\n        </div>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ForecastCard;\r\n","import React from \"react\";\r\nimport \"./ForecastRowHourly.css\";\r\n\r\nconst ForecastRowHourly = ({ children }) => {\r\n  return <div className=\"forecast-wrapper\">{children}</div>;\r\n};\r\n\r\nexport default ForecastRowHourly;\r\n","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport * as utils from \"../../utils/helpers\";\r\nimport \"./ForecastCardHourly.css\";\r\n\r\nconst ForecastCard = ({ day, handleOnClick }) => {\r\n  return (\r\n    <div className=\"forecast-card forecast-card__hourly\">\r\n      <p className=\"time\">\r\n        <Moment format={\"h a\"}>{day.dt_txt}</Moment>\r\n      </p>\r\n      <div className=\"weather-icon\">\r\n        <i className={utils.buildIcon(day)} />\r\n      </div>\r\n      <div className=\"temps\">\r\n        <div className=\"temp-high\">\r\n          {Math.round(utils.kelvinToFahrenheit(day.main.temp_max))}\r\n          <i className=\"degree-symbol\" />\r\n        </div>\r\n        <div className=\"temp-low\">\r\n          {Math.round(utils.kelvinToFahrenheit(day.main.temp_min))}\r\n          <i className=\"degree-symbol\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastCard;\r\n","import React, { Component } from 'react';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\nimport * as utils from '../../utils/helpers';\r\n\r\nimport { VictoryGroup, VictoryChart, VictoryBar, VictoryAxis, VictoryTheme } from 'victory';\r\n\r\nimport ForecastRow from './ForecastRow';\r\nimport ForecastCard from './ForecastCard';\r\nimport ForecastRowHourly from './ForecastRowHourly';\r\nimport ForecastCardHourly from './ForecastCardHourly';\r\n\r\nimport './ForecastContainer.css';\r\n\r\nexport default class ForecastContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      forecast: [],\r\n      hourlyFiveDay: [],\r\n      location: {},\r\n      located: true,\r\n      displayHourly: false,\r\n      hourlyForecastList: []\r\n    };\r\n  }\r\n\r\n  geolocationError = err => {\r\n    this.setState({\r\n      forecast: [],\r\n      location: {},\r\n      displayHourly: false,\r\n      located: false\r\n    });\r\n\r\n    console.warn(`ERROR(${err.code}): ${err.message}`);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const options = {\r\n      enableHighAccuracy: true,\r\n      timeout: 5000,\r\n      maximumAge: 0\r\n    };\r\n\r\n    if ('geolocation' in navigator) {\r\n      /* geolocation is available */\r\n      navigator.geolocation.getCurrentPosition(\r\n        position => {\r\n          this.handleGeoSearch(position);\r\n        },\r\n        this.geolocationError,\r\n        options\r\n      );\r\n    } else {\r\n      /* geolocation IS NOT available */\r\n      this.setState({ located: false });\r\n    }\r\n  }\r\n\r\n  handleDailyTempChart = temp => {\r\n    switch (temp) {\r\n      case 'high':\r\n        let count = 0;\r\n        const data = this.state.hourlyForecastList.map(time => {\r\n          const high = Math.round(utils.kelvinToFahrenheit(time.main.temp_max));\r\n          count++;\r\n          return { x: count, y: high };\r\n        });\r\n        return data;\r\n\r\n      case 'low':\r\n        let count2 = 0;\r\n        const data2 = this.state.hourlyForecastList.map(time => {\r\n          const low = Math.round(utils.kelvinToFahrenheit(time.main.temp_min));\r\n          count2++;\r\n          return { x: count2, y: low };\r\n        });\r\n        return data2;\r\n\r\n      case 'avg':\r\n        let count3 = 0;\r\n        const data3 = this.state.hourlyForecastList.map(time => {\r\n          const high = Math.round(utils.kelvinToFahrenheit(time.main.temp_max));\r\n          const low = Math.round(utils.kelvinToFahrenheit(time.main.temp_min));\r\n          const avg = (high + low) / 2;\r\n          // console.log(high, low, avg);\r\n          count3++;\r\n          return { x: count3, y: avg };\r\n        });\r\n        return data3;\r\n\r\n      default:\r\n        let count4 = 0;\r\n        const data4 = this.state.hourlyForecastList.map(time => {\r\n          const high = Math.round(utils.kelvinToFahrenheit(time.main.temp_max));\r\n          const low = Math.round(utils.kelvinToFahrenheit(time.main.temp_min));\r\n          const avg = (high + low) / 2;\r\n          // console.log(high, low, avg);\r\n          count4++;\r\n          return { x: count4, y: avg };\r\n        });\r\n        return data4;\r\n    }\r\n  };\r\n\r\n  handleKeyPress = e => {\r\n    if (e.key === 'Enter') {\r\n      this.handleForecastSearch();\r\n    }\r\n  };\r\n\r\n  handleGeoSearch = pos => {\r\n    const coords = pos.coords;\r\n\r\n    const url = `https://api.openweathermap.org/data/2.5/forecast?lat=${coords.latitude}&lon=${coords.longitude}&APPID=41208a14923fc26bae2f6ae307db826e`;\r\n\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        console.log(res);\r\n        const data = res.list.filter(x => /12:00:00/.test(x.dt_txt));\r\n        const highsAndLows = this.getHighsAndLows(res.list);\r\n        // console.log(highsAndLows);\r\n        const newData = data.map((d, i) => {\r\n          d.main.high = highsAndLows[i].high;\r\n          d.main.low = highsAndLows[i].low;\r\n          return d;\r\n        });\r\n\r\n        const newData2 = newData.map(day => day.dt_txt.split(' ').shift());\r\n        const newData3 = newData2.map(date => {\r\n          const testDate = RegExp(date);\r\n          const hourlyArray = res.list.filter(x => testDate.test(x.dt_txt));\r\n          return hourlyArray;\r\n        });\r\n\r\n        const avgData = newData3.map(arr => this.determineForecastAverage(arr));\r\n\r\n        const newDataFinal = newData.map((d, i) => {\r\n          d.main.avgCondition = avgData[i];\r\n          return d;\r\n        });\r\n\r\n        this.setState({\r\n          forecast: newDataFinal,\r\n          hourlyFiveDay: res.list,\r\n          location: res.city,\r\n          located: false,\r\n          displayHourly: false\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // get array of dates\r\n\r\n  // use that array of dates to map over the available list of hourly forecasts\r\n  // to generate an array of forecasts only for that day\r\n\r\n  // then, use that array for that specific day and evaluate the min/max temps\r\n  // and grab highest and lowest total values to sort of get the highs and lows for each day\r\n\r\n  mostFrequent = array => {\r\n    let result = array[0].weather[0].id;\r\n    let tmp = 0;\r\n    for (let i = 0; i < array.length; i++) {\r\n      let count = 0;\r\n      for (let j = 0; j < array.length; j++) {\r\n        if (array[i].weather[0].id === array[j].weather[0].id) {\r\n          count++;\r\n        }\r\n      }\r\n      if (count > tmp) {\r\n        tmp = count;\r\n        result = array[i].weather[0].id;\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  filterDates = (date, list) => {\r\n    console.log(date);\r\n    const testDate = RegExp(date);\r\n    console.log(testDate);\r\n    const hourlyForecastList = list.filter(x => {\r\n      console.log(x.dt_txt);\r\n      console.log(testDate.test(x.dt_txt));\r\n      return testDate.test(x.dt_txt);\r\n    });\r\n    const highest = hourlyForecastList.reduce((max, num) => {\r\n      return num.main.temp_max > max.main.temp_max ? num : max;\r\n    });\r\n    const lowest = hourlyForecastList.reduce((min, num) =>\r\n      num.main.temp_min < min.main.temp_min ? num : min\r\n    );\r\n\r\n    return { high: highest.main.temp_max, low: lowest.main.temp_min };\r\n  };\r\n\r\n  getHighsAndLows = data => {\r\n    const wholeList = data ? data : this.state.hourlyFiveDay;\r\n    const allTheDates = wholeList.map(x => {\r\n      const date = x.dt_txt.split(' ').shift();\r\n      return date;\r\n    });\r\n\r\n    const unique = allTheDates.filter(utils.onlyUnique);\r\n\r\n    const hsnls = unique.map(date => {\r\n      return this.filterDates(date, wholeList);\r\n    });\r\n\r\n    return hsnls;\r\n  };\r\n\r\n  // pass a unique date\r\n  determineForecastAverage = array => this.mostFrequent(array);\r\n\r\n  handleHourlyForecast = day => {\r\n    const id = day.dt;\r\n    const newHourly = this.state.hourlyFiveDay.map(x => {\r\n      if (x.dt === id) {\r\n        x.active = true;\r\n      }\r\n      return x;\r\n    });\r\n    const newForecast = this.state.forecast.map(x => {\r\n      if (x.dt === id) {\r\n        x.active = true;\r\n      } else {\r\n        x.active = false;\r\n      }\r\n      return x;\r\n    });\r\n    const date = day.dt_txt.split(' ').shift();\r\n\r\n    const testDate = RegExp(date);\r\n    const hourlyForecast = newHourly.filter(x => testDate.test(x.dt_txt));\r\n    this.setState({\r\n      displayHourly: true,\r\n      hourlyForecastList: hourlyForecast,\r\n      forecast: newForecast\r\n    });\r\n  };\r\n\r\n  handleForecastSearch = () => {\r\n    const zip = this.zipCode.value;\r\n    if (zip && zip.length === 5) {\r\n      const url = `https://api.openweathermap.org/data/2.5/forecast?zip=${zip},us&APPID=41208a14923fc26bae2f6ae307db826e`;\r\n      fetch(url)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          const newState = res.list.map(x => {\r\n            x.active = false;\r\n            return x;\r\n          });\r\n\r\n          const data = newState.filter(x => /12:00:00/.test(x.dt_txt));\r\n          const highsAndLows = this.getHighsAndLows(res.list);\r\n          // console.log(highsAndLows);\r\n          const newData = data.map((d, i) => {\r\n            d.main.high = highsAndLows[i].high;\r\n            d.main.low = highsAndLows[i].low;\r\n            return d;\r\n          });\r\n\r\n          const newData2 = newData.map(day => day.dt_txt.split(' ').shift());\r\n          const newData3 = newData2.map(date => {\r\n            const testDate = RegExp(date);\r\n            const hourlyArray = newState.filter(x => testDate.test(x.dt_txt));\r\n            return hourlyArray;\r\n          });\r\n\r\n          const avgData = newData3.map(arr => this.determineForecastAverage(arr));\r\n\r\n          const newDataFinal = newData.map((d, i) => {\r\n            d.main.avgCondition = avgData[i];\r\n            return d;\r\n          });\r\n\r\n          this.setState({\r\n            forecast: newDataFinal,\r\n            hourlyFiveDay: newState,\r\n            location: res.city,\r\n            displayHourly: false\r\n          });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            forecast: [],\r\n            location: {},\r\n            displayHourly: false\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        forecast: [],\r\n        location: {},\r\n        displayHourly: false\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const style = {\r\n      maxWidth: '800px',\r\n      margin: '0 auto'\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        {this.state.located ? (\r\n          <p>Generating your forecast...</p>\r\n        ) : (\r\n          <div>\r\n            <label htmlFor=\"zipcode\">zipcode:</label>\r\n            <input\r\n              id=\"zipcode\"\r\n              ref={zipCode => (this.zipCode = zipCode)}\r\n              type=\"text\"\r\n              placeholder=\"e.g. 60618\"\r\n              onKeyPress={this.handleKeyPress}\r\n            />\r\n            <button onClick={this.handleForecastSearch}>Search</button>\r\n          </div>\r\n        )}\r\n        {this.state.location && <h2>{this.state.location.name}</h2>}\r\n        <div>\r\n          {this.state.forecast.length ? (\r\n            <ForecastRow>\r\n              <span>\r\n                {this.state.forecast.map(day => (\r\n                  <ForecastCard\r\n                    key={Math.round(Math.random() * day.dt)}\r\n                    day={day}\r\n                    active={day.active}\r\n                    handleOnClick={d => {\r\n                      this.handleHourlyForecast(d);\r\n                    }}\r\n                  />\r\n                ))}\r\n              </span>\r\n            </ForecastRow>\r\n          ) : (\r\n            <div>{this.state.located ? null : <p>Get your 5-day forecast!</p>}</div>\r\n          )}\r\n        </div>\r\n        {this.state.hourlyForecastList.length && this.state.displayHourly ? (\r\n          <div>\r\n            <ForecastRowHourly>\r\n              <ReactCSSTransitionGroup\r\n                transitionName=\"forecast-card\"\r\n                transitionAppear={true}\r\n                transitionAppearTimeout={500}\r\n                transitionEnterTimeout={500}\r\n                transitionLeaveTimeout={300}\r\n              >\r\n                {this.state.hourlyForecastList.map(day => {\r\n                  return <ForecastCardHourly key={day.dt} day={day} />;\r\n                })}\r\n              </ReactCSSTransitionGroup>\r\n            </ForecastRowHourly>\r\n            <div style={style}>\r\n              <VictoryChart\r\n                theme={VictoryTheme.material}\r\n                domainPadding={{ x: 20 }}\r\n                height={200}\r\n                style={{\r\n                  data: { opacity: 0.7 },\r\n                  text: {\r\n                    fontFamily: \"'Open Sans', Arial, sans-serif !important\",\r\n                    fontSize: '8px !important'\r\n                  }\r\n                }}\r\n              >\r\n                <VictoryAxis\r\n                  crossAxis\r\n                  theme={VictoryTheme.material}\r\n                  standalone={false}\r\n                  label=\"Time\"\r\n                  style={{\r\n                    axis: { stroke: '#f5f5f5' },\r\n                    axisLabel: { fontSize: 8, padding: 30 },\r\n                    tickLabels: { fontSize: 6, padding: 5 }\r\n                  }}\r\n                />\r\n                <VictoryAxis\r\n                  dependentAxis\r\n                  crossAxis\r\n                  theme={VictoryTheme.material}\r\n                  standalone={false}\r\n                  label=\"Temp (Fahrenheit)\"\r\n                  style={{\r\n                    axis: { stroke: '#f5f5f5' },\r\n                    axisLabel: { fontSize: 8, padding: 30 },\r\n                    tickLabels: { fontSize: 6, padding: 5 }\r\n                  }}\r\n                />\r\n                <VictoryGroup\r\n                  animate={{\r\n                    duration: 250,\r\n                    onLoad: { duration: 250 }\r\n                  }}\r\n                  offset={7}\r\n                  colorScale={['rgb(24, 100, 156)', 'rgb(68, 176, 227)', 'rgb(144, 209, 240)']}\r\n                >\r\n                  <VictoryBar\r\n                    alignment=\"start\"\r\n                    barRatio={0.2}\r\n                    data={this.handleDailyTempChart('high')}\r\n                  />\r\n                  <VictoryBar\r\n                    alignment=\"start\"\r\n                    barRatio={0.2}\r\n                    data={this.handleDailyTempChart('avg')}\r\n                  />\r\n                  <VictoryBar\r\n                    alignment=\"start\"\r\n                    barRatio={0.2}\r\n                    data={this.handleDailyTempChart('low')}\r\n                  />\r\n                </VictoryGroup>\r\n              </VictoryChart>\r\n              <p>Daily Temperatures</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            {this.state.hourlyForecastList.length === 0 ? (\r\n              <p>Click on a day to see the hourly forecast.</p>\r\n            ) : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // build component for search / input\r\n\r\n  // Validation for input to dynamically search the API depending on the query\r\n  // e.g. zipcode vs. city name vs lat/long\r\n\r\n  // For added practice, here are a few ways you could expand on the app:\r\n\r\n  // Add the ability to click on a day, and see its hourly forecast.\r\n  // You can just maintain the current view in the top-level App state.\r\n\r\n  // Add React Router to the project (npm install react-router) and\r\n  // follow the quick start guide here to add routes, such\r\n  // that / shows the 5-day forecast, and /[name-of-day] shows the hourly\r\n  // forecast for a particular day.\r\n\r\n  // Want to get really fancy? Add a graphics library like vx\r\n  // and follow the examples here to add a graph of the temperature\r\n  // over the course of a week or day.\r\n}\r\n","import React, { Component } from 'react';\r\nimport ForecastContainer from './components/Forecast/ForecastContainer';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1 className=\"App-title\">Five Day Forecast</h1>\r\n        </header>\r\n        <p className=\"App-intro\">Search your area below:</p>\r\n        <ForecastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}